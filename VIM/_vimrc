""""""""""""""""""""""""""""""
" 快捷键设置
""""""""""""""""""""""""""""""
"保存文件
map <F2> :w<CR>

"关闭文件
map <F3> :q<CR>

"打开上级菜单
"map <F4> :e .<CR>

map <F4> :NERDTree<CR>
map <F5> :e #<CR>

"清除文件末尾空格
map <F6> :%s/\s*$//gi<CR>

"map <silent> <F7> :TlistToggle<CR>

" cp936是GBK的别名，GBK是GB2312的超集
map <F7> :set fileencoding=cp936<CR>
map <F8> :set fileencoding=utf-8<CR>

"设置是否显示行号
map <F12> :set nu!<CR>

imap jj <ESC>

"Set mapleader
let mapleader = ";"

" 打开javascript折叠
let b:javascript_fold=1
" 打开javascript对dom、html和css的支持
let javascript_enable_domhtmlcss=1
" javascript dict path
autocmd FileType javascript set dictionary=$VIMRUNTIME/dict/javascript.dict

setlocal foldlevel=1

set autochdir

" Platform
function! MySys()
  if has("win32")
    return "windows"
  else
    return "linux"
  endif
endfunction

function! SwitchToBuf(filename)
    "let fullfn = substitute(a:filename, "^\\~/", $HOME . "/", "")
    " find in current tab
    let bufwinnr = bufwinnr(a:filename)
    if bufwinnr != -1
        "exec bufwinnr . "wincmd w"
        return
    else
        " find in each tab
        tabfirst
        let tab = 1
        while tab <= tabpagenr("$")
            let bufwinnr = bufwinnr(a:filename)
            if bufwinnr != -1
                exec "normal " . tab . "gt"
                "exec bufwinnr . "wincmd w"
                return
            endif
            tabnext
            let tab = tab + 1
        endwhile
        " not exist, new tab
        exec "tabnew " . a:filename
    endif
endfunction

"Fast edit vimrc
if MySys() == 'linux'
    "Fast reloading of the .vimrc
    map <silent> <leader>ss :source ~/.vimrc<cr>
    "Fast editing of .vimrc
    map <silent> <leader>ee :call SwitchToBuf("~/.vimrc")<cr>
    "When .vimrc is edited, reload it
    autocmd! bufwritepost .vimrc source ~/.vimrc
elseif MySys() == 'windows'
    " Set helplang
    set helplang=cn
    "Fast reloading of the _vimrc
    map <silent> <leader>s :source ~/_vimrc<cr>
    "Fast editing of _vimrc
    map <silent> <leader>e :call SwitchToBuf("~/_vimrc")<cr>
    "When _vimrc is edited, reload it
    autocmd! bufwritepost _vimrc source ~/_vimrc
endif



" 状态行颜色
" highlight StatusLine guifg=SlateBlue guibg=Yellow
highlight StatusLine guifg=SlateBlue guibg=White
highlight StatusLineNC guifg=Gray guibg=White

"备份文件设置
set backupext=.bak
set backupdir=D:\backup\

"CSS autocomplete
"imap <tab> <c-x><c-o>
autocmd FileType css set omnifunc=csscomplete#CompleteCSS

"文件默认编码
set enc=utf-8
set encoding=utf-8

"打开文件进行解码的猜测列表，严格编码放在前面，宽松的放后面
"set fileencodings=utf-8,chinese,latin-1,cp936
set fileencodings=ucs-bom,utf-8,cp936,gb18030,big5,euc-jp,euc-kr,latin1
"文件保存时使用的编码
if has('win32')
"set fileencoding=chinese
set fileencoding=utf-8
else
set fileencoding=utf-8
endif

"解决菜单乱码
source $VIMRUNTIME/delmenu.vim
source $VIMRUNTIME/menu.vim

"解决consle输出乱码
language messages zh_CN.utf-8

"缩进为4个空格宽度
set tabstop=4
"自动缩进使用的空格数
set shiftwidth=4
"编辑插入tab时，把tab算作的空格数
set softtabstop=4
"缩进使用空格
set expandtab
"自动缩进
set autoindent
"鼠标捕捉
set mouse=a
"打开语法高亮
syntax on
"Set to auto read when a file is changed from the outside
set autoread
" When vimrc is edited, reload it
autocmd! bufwritepost vimrc source ~/.vim_runtime/vimrc
" Set 7 lines to the curors - when moving vertical..
set so=5 "so = scrolloff

"NERDTree 设置
let NERDTreeWinSize=20

"taglist 设置
let Tlist_WinWidth=20

""""""""""""""""""""""""""""""
" Tag list (ctags)
""""""""""""""""""""""""""""""
if MySys() == "windows"                "设定windows系统中ctags程序的位置
let Tlist_Ctags_Cmd = 'ctags'
elseif MySys() == "linux"              "设定linux系统中ctags程序的位置
let Tlist_Ctags_Cmd = '/usr/bin/ctags'
endif
let Tlist_Show_One_File = 1            "不同时显示多个文件的tag，只显示当前文件的
let Tlist_Exit_OnlyWindow = 1          "如果taglist窗口是最后一个窗口，则退出vim
let Tlist_Use_Right_Window = 1         "在右侧窗口中显示taglist窗口

""""""""""""""""""""""""""""""
" => Statusline
""""""""""""""""""""""""""""""
" Always hide the statusline
set laststatus=2

" Format the statusline
set statusline=\ %{HasPaste()}%F%m%r%h\ %w\ \ CWD:\ %r%{CurDir()}%h\ \ \ Line:\ %l/%L:%c


function! CurDir()
    let curdir = substitute(getcwd(), '/Users/amir/', "~/", "g")
    return curdir
endfunction

function! HasPaste()
    if &paste
        return 'PASTE MODE  '
    else
        return ''
    endif
endfunction

""""""""""""""""""""""""""""""
" => JavaScript section
"""""""""""""""""""""""""""""""
au FileType javascript call JavaScriptFold()
au FileType javascript setl fen
au FileType javascript setl nocindent

au FileType javascript imap <c-t> AJS.log();<esc>hi
au FileType javascript imap <c-a> alert();<esc>hi

au FileType javascript inoremap <buffer> $r return
au FileType javascript inoremap <buffer> $f //--- PH ----------------------------------------------<esc>FP2xi

function! JavaScriptFold()
    setl foldmethod=syntax
    setl foldlevelstart=1
    syn region foldBraces start=/{/ end=/}/ transparent fold keepend extend

    function! FoldText()
    return substitute(getline(v:foldstart), '{.*', '{...}', '')
    endfunction
    setl foldtext=FoldText()
endfunction

set nobackup
"set nowb
"set noswapfile
"se bdir=D:\Users\Administrator\Documents\My%20doc\vim\backups

set nu
set go=
colo desert
set nocompatible
set laststatus=2
source $VIMRUNTIME\vimrc_example.vim
source $VIMRUNTIME\mswin.vim
behave mswin

nmap <C-N> :tabnext<CR>
nmap <C-P> :tabprevious<CR>

" 启动的时候不显示那个援助索马里儿童的提示
set shortmess=atI

" 设置显示字体
if has("win32")
    au GUIEnter * simalt ~x "最大化窗口
    " set guifont=Courier_New:h11:cANSI
    "set guifont=YaHei\ Mono:h11
    "set guifontwide=Microsoft\ Yahei\ Monotype:h11
    "set guifont=YaHei\ Consolas\ Hybrid:h12
    "set guifont=Anonymous:h11:cANSI
    set guifont=Bitstream\ Vera\ Sans\ Mono:h11:cANSI
    set guifontwide=YouYuan:h12
    "set guifontwide=YaHei\ Consolas\ Hybrid:h10
endif

" 想预先打开的文件
function! PreOpen()
    cd D:\Users\Administrator\Documents\My doc\FE\lab\
    open canvas.html
    tabe js\test\canvas-test.js
    tabe css\memo.css
    tabe js\test\common.js
endfunction
